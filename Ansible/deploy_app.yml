---

- name: Configurar Docker no Amazon Linux 2023
  hosts: all
  become: yes
  tasks:
    - name: Atualizar pacotes e cache do yum
      ansible.builtin.yum:
        name: '*'
        state: latest

    - name: Instalar o Docker
      ansible.builtin.yum:
        name: docker
        state: present

    - name: Iniciar o serviço Docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Adicionar o usuário ec2-user ao grupo docker
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Fazer o pull e rodar a imagem Docker da aplicação
      community.docker.docker_container:
        name: meu_app_devops
        image: nathaliapaulon/appdevops:latest
        restart_policy: always
        ports:
          - "8000:8000"
        state: started

    - name: Fazer o pull e rodar o contêiner do Prometheus
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus:latest
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - /etc/docker-compose/prometheus.yml:/etc/prometheus/prometheus.yml
          - /etc/docker-compose/alerts.prometheus.yaml:/etc/prometheus/alerts.prometheus.yaml
        state: started

    - name: Fazer o pull e rodar o contêiner do Blackbox Exporter
      community.docker.docker_container:
        name: blackbox_exporter
        image: prom/blackbox-exporter:latest
        restart_policy: always
        ports:
          - "9115:9115"
        volumes:
          - /etc/docker-compose/blackbox.yml:/etc/blackbox_exporter/config.yml
        state: started

    - name: Fazer o pull e rodar o contêiner do Alertmanager
      community.docker.docker_container:
        name: alertmanager
        image: prom/alertmanager:latest
        restart_policy: always
        ports:
          - "9093:9093"
        volumes:
          - /etc/docker-compose/alertmanager.yml:/etc/alertmanager/alertmanager.yml
        state: started

    - name: Fazer o pull e rodar o contêiner do Grafana
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:latest
        restart_policy: always
        ports:
          - "3000:3000"
        state: started

    - name: Verificar se os contêineres estão rodando
      ansible.builtin.command: docker ps
      register: docker_ps_output

    - name: Mostrar a saída do comando docker ps
      ansible.builtin.debug:
        var: docker_ps_output.stdout_lines